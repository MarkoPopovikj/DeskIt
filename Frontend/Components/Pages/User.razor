@page "/user/{Username}"

@using Frontend.Services
@using Frontend.Components.Shared
@using Frontend.Models

@inject UserService UserService
@inject PostService PostService
@inject CommunityService CommunityService
@inject Blazored.Toast.Services.IToastService ToastService
@inject IJSRuntime JSRuntime

@if (_isLoading)
{
    <Loading />
}
else
{
    <div class="grid grid-cols-1 xl:grid-cols-3 gap-6">
        <main class="py-6 xl:col-span-2">
            <div class="flex items-center justify-between mb-2">
                <button @onclick="GoBack" class="p-2 rounded-full hover:bg-gray-200 mr-2">
                    <svg class="h-6 w-6 text-gray-600" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                    </svg>
                </button>

                <button @onclick="ForceReload" class="p-2 rounded-full text-gray-500 hover:bg-gray-200 hover:text-gray-800 transition">
                    <svg xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    class="h-6 w-6">
                        <path stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M21 12a9 9 0 11-3-6.708M21 3v6h-6" />
                    </svg>
                </button>
            </div>

            <div class="bg-white rounded-lg shadow-sm">
                <div class="h-32 bg-gradient-to-r bg-[#@SelectedUser.BackgroundColor] to-indigo-600 rounded-t-lg"></div>

                <div class="p-6">
                    <div class="flex flex-col sm:flex-row sm:items-center">
                        <div class="-mt-16">
                            <img class="h-24 w-24 rounded-full border-4 border-white"
                                 src="@($"https://placehold.co/96x96/{SelectedUser.BackgroundColor}/FFFFFF?text={SelectedUser.Username.ToString().ToUpper()[0]}")"
                            alt="User Avatar" />
                        </div>

                        <div>
                            <div class="lg:-mt-3 sm:mt-0 sm:ml-4 flex-grow">
                                <h1 class="text-2xl font-bold text-gray-900">@SelectedUser.Username</h1>
                                <p class="text-sm text-gray-500 -mt-1">u/@SelectedUser.Username</p>

                                <div class="mt-3 lg:mt-2 flex items-center space-x-6 text-sm text-gray-600 xl:hidden">
                                    <div class="flex items-center">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 text-orange-500" viewBox="0 0 20 20" fill="currentColor">
                                            <path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.787l.09.044a2 2 0 002.208-.445l4.577-5.996a2 2 0 00.44-2.208l-.09-.044a2 2 0 00-2.208.445L9 12.333V4.5a1.5 1.5 0 00-3 0v5.833z" />
                                        </svg>
                                        <span class="font-semibold">@SelectedUser.Karma</span>
                                        <span class="ml-1">Karma</span>
                                    </div>
                                    <div class="flex items-center">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 text-teal-500" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M5 5a3 3 0 015.252-2.121l.738.738a.5.5 0 00.708 0l.738-.738A3 3 0 0115 5v2.293l.53.53a1 1 0 010 1.414l-2 2a1 1 0 01-1.414 0l-1.293-1.293V15a1 1 0 01-1-1v-2.293l-1.293 1.293a1 1 0 01-1.414 0l-2-2a1 1 0 010-1.414l.53-.53V5zm2 5.707l1.293-1.293a1 1 0 011.414 0L12 12.707V15a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2.293z" clip-rule="evenodd" />
                                        </svg>
                                        <span class="font-semibold">@SelectedUser.CreatedAt.ToString("MMM d, yyyy")</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="mt-6 border-t border-gray-200 pt-6">
                        <h3 class="text-sm font-bold text-gray-700">About Me</h3>
                        @if (string.IsNullOrEmpty(SelectedUser.AboutMe))
                        {
                            <div class="w-full h-full flex justify-center bg-white rounded-lg p-4 text-center">
                                <p class="text-gray-500">This user hasn't made any description yet.</p>
                            </div>
                        }
                        else
                        {
                            <p class="text-gray-600 mt-2">@SelectedUser.AboutMe</p>
                        }
                    </div>
                </div>

                <div class="border-t border-gray-200">
                    <nav class="flex space-x-4 px-6" aria-label="Tabs">
                        <button @onclick='() => SetActiveTab("posts")' class="tab-btn font-semibold py-4 px-1 border-b-2 text-sm @(_activeTab == "posts" ? "tab-active" : "text-gray-600 hover:text-blue-600 border-transparent")">
                            Posts
                        </button>
                        <button @onclick='() => SetActiveTab("communities")' class="tab-btn font-semibold py-4 px-1 border-b-2 text-sm @(_activeTab == "communities" ? "tab-active" : "text-gray-600 hover:text-blue-600 border-transparent")">
                            Communities
                        </button>
                    </nav>
                </div>
            </div>

            <div class="mt-6">
                @if (_activeTab == "posts")
                {
                    @if (UserPosts != null && UserPosts.Count > 0)
                    {
                        <PostsCardHolder Posts="UserPosts" UserVotes="UserVotes" />
                    }
                    else
                    {
                        <NothingMadeCard Query="This user has not posted anything yet" />
                    }
                }

                @if (_activeTab == "communities")
                {
                    @if (UserCommunities != null && UserCommunities.Count > 0)
                    {
                        <CommunityCardHolder Communities="UserCommunities" />
                    }
                    else
                    {
                        <NothingMadeCard Query="This user has not joined any communities yet" />
                    }
                }
            </div>
        </main>

        <aside class="hidden xl:block py-6">
            <div class="sticky top-6">
                <div class="bg-white rounded-lg shadow-sm p-4">
                    <div class="flex items-center space-x-3 mb-4">
                        <img class="h-12 w-12 rounded-full"
                             src="@($"https://placehold.co/96x96/{SelectedUser.BackgroundColor}/FFFFFF?text={SelectedUser.Username.ToString().ToUpper()[0]}")"
                        alt="User Avatar" />
                        <div>
                            <h4 class="font-bold text-gray-800">u/@SelectedUser.Username</h4>
                            <p class="text-xs text-gray-500">@SelectedUser.Username</p>
                        </div>
                    </div>
                    <div class="border-t border-gray-200 pt-4">
                        <div class="flex justify-between text-sm mb-2">
                            <span class="font-semibold text-gray-700">Karma</span>
                            <span class="text-gray-600">@SelectedUser.Karma</span>
                        </div>
                        <div class="flex justify-between text-sm">
                            <span class="font-semibold text-gray-700">Cake day</span>
                            <span class="text-gray-600">@SelectedUser.CreatedAt.ToString("MMM d, yyyy")</span>
                        </div>
                    </div>
                </div>
            </div>
        </aside>
    </div>
}


@code {
    [Parameter]
    public string Username { get; set; }

    private UserModel SelectedUser => UserService.SelectedUser;
    private List<PostModel> UserPosts => PostService.UserPostList;
    private Dictionary<int, int> UserVotes => PostService.UserPostVotes;
    private List<CommunitySimpleModel> UserCommunities => CommunityService.UserCommunityList;


    private bool _isLoading = true;
    private string _errorMessage { get; set; } = null;
    private int _errorCounter = 0;

    private string _activeTab = "posts";

    protected override async Task OnInitializedAsync()
    {
        await ForceReload();
    }

    private async Task ForceReload()
    {
        _isLoading = true;
        _errorMessage = null;

        await GetUser();
        await GetUserPosts();
        await GetUserCommunities();

        if (_errorCounter == 0)
        {
            _isLoading = false;
        }
        else
        {
            _errorMessage = "Something went wrong";
            ToastService.ShowError(_errorMessage);
        }

		StateHasChanged();
    }

    private async Task GetUser()
    {
        bool result = await UserService.GetUserAsync(Username);

        if (!result)
        {
            _errorCounter++;
        }
    }

    private async Task GetUserPosts()
    {
        bool result = await PostService.GetUserPostsAsync(SelectedUser.UserId);

        if (!result)
        {
            _errorCounter++;
        }
    }

    private async Task GetUserCommunities()
    {
        bool result = await CommunityService.GetUserSimpleCommunitiesAsync(SelectedUser.UserId);

        if (!result)
        {
            _errorCounter++;
        }
    }

    private void SetActiveTab(string tabName)
    {
        _activeTab = tabName;
    }

    private async Task GoBack()
    {
        await JSRuntime.InvokeVoidAsync("history.back");
    }
}
