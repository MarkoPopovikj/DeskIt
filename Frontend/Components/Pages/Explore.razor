@page "/explore" 

@inject CommunityService CommunityService 
@inject Blazored.Toast.Services.IToastService ToastService

@using Frontend.Components.Shared 
@using Frontend.Services

@if (_isLoading)
{
    <Loading />
}
else
{
    <div class="grid grid-cols-1 xl:grid-cols-[1fr_320px] xl:gap-6 h-full">
        <div class="space-y-6 overflow-y-auto py-6">
            <h1 class="text-3xl font-bold text-gray-800 mb-6">Explore Communities</h1>

            <div class="bg-white rounded-lg shadow-md mb-8">
                <div class="max-w-4xl mx-auto">
                    <FeaturedCommunityCard />
                </div>
            </div>

            <div class="space-y-8">
                @foreach (TopicResponse topic in CommunityService.TopicList)
                {
                    <CommunityTopicCardHolder Topic="@topic.Label" />
                }
            </div>
        </div>

        <aside class="hidden xl:block">
            <div class="bg-white border border-gray-200 rounded-lg p-6 text-center">
                <svg class="h-16 w-16 mx-auto text-blue-500"
                     fill="none"
                     viewBox="0 0 24 24"
                     stroke-width="1.5"
                     stroke="currentColor">
                    <path stroke-linecap="round"
                          stroke-linejoin="round"
                          d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <h3 class="text-lg font-bold text-gray-900 mt-4">
                    Create Your Own Community
                </h3>
                <p class="text-sm text-gray-600 mt-2 mb-4">
                    Bring people together with a shared interest and start your own corner
                    of DeskIt.
                </p>
                <a href="/community/create"
                   class="block w-full bg-blue-600 text-white font-bold py-2.5 rounded-full hover:bg-blue-700 transition text-center">
                    Create Community
                </a>
            </div>
        </aside>
    </div>
}


@code{
	private bool _isLoading { get; set; } = false;
	private string? _errorMessage { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
		_isLoading = true;

        if (CommunityService.TopicList != null && CommunityService.TopicList.Count > 0)
        {
            _isLoading = false;
            return;
        }

        _errorMessage = null;
        bool result = await CommunityService.GetTopicsAsync();

        if (result)
        {
            _isLoading = false;
        }
        else
        {
            _errorMessage = "Something went wrong";
            ToastService.ShowError(_errorMessage);
        }

        StateHasChanged();
	}
}
