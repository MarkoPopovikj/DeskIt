@page "/community/{CommunityName}"

@using Frontend.Models
@using Frontend.Services

@inject AuthService AuthService
@inject CommunityService CommunityService
@inject Blazored.Toast.Services.IToastService ToastService
@inject IJSRuntime JSRuntime

<div class="grid grid-cols-1 xl:grid-cols-3 gap-6">
    <main class="py-6 xl:col-span-2">
        <div class="flex items-center justify-between mb-2">
            <button @onclick="GoBack" class="p-2 rounded-full hover:bg-gray-200 mr-2">
                <svg class="h-6 w-6 text-gray-600" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
            </button>

            <button 
            class="p-2 rounded-full text-gray-500 hover:bg-gray-200 hover:text-gray-800 transition">
                <svg xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                class="h-6 w-6">
                    <path stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M21 12a9 9 0 11-3-6.708M21 3v6h-6" />
                </svg>
            </button>
        </div>

        <div class="bg-white rounded-lg shadow-sm mb-4">
            <div class="h-32 bg-gradient-to-r bg-[#@CommunityView.BackgroundColor] to-indigo-600 rounded-t-lg"></div>

            <div class="p-6">
                <div class="flex flex-col sm:flex-row sm:items-center">
                    <div class="-mt-16">
                        <img class="h-24 w-24 rounded-full border-4 border-white"
                        src="@($"https://placehold.co/96x96/{CommunityView.BackgroundColor}/FFFFFF?text={CommunityView.Name.ToString().ToUpper()[0]}")"
                        alt="User Avatar" />
                    </div>

                    <div>
                        <div class="lg:-mt-3 sm:mt-0 sm:ml-4 flex-grow">
                            <h1 class="text-2xl font-bold text-gray-900">@CommunityView.Name</h1>
                            <p class="text-sm text-gray-500 -mt-1">u/@CommunityView.Name</p>

                            <div class="mt-3 lg:mt-2 flex items-center space-x-6 text-sm text-gray-600 xl:hidden">
                                <div class="flex items-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" />
                                        <circle cx="9" cy="7" r="4" />
                                        <path d="M22 21v-2a4 4 0 0 0-3-3.87" />
                                        <path d="M16 3.13a4 4 0 0 1 0 7.75" />
                                    </svg>
                                    <span>@CommunityView.MemberCount Members</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (AuthService.CurrentUser.UserId == CommunityView.AuthorId)
                    {
                        <div class="mt-4 sm:hidden">
                            <a href="edit_community/@CommunityView.Name"
                            class="w-full flex justify-center bg-gray-200 text-gray-800 font-semibold py-2 px-4 rounded-full hover:bg-gray-300 transition text-sm">
                                Edit Community
                            </a>
                        </div>

                        <div class="hidden sm:block sm:ml-auto">
                            <a href="edit_community/@CommunityView.Name"
                            class="w-auto flex justify-center bg-gray-200 text-gray-800 font-semibold py-2 px-4 rounded-full hover:bg-gray-300 transition text-sm">
                                Edit Community
                            </a>
                        </div>
                    }
                    else if (CheckIfMember())
                    {
                        <div class="mt-4 sm:hidden">
                            <div @onclick="LeaveCommunity"
                            class="cursor-pointer w-full flex justify-center bg-red-500 text-white font-semibold py-2 px-4 rounded-full hover:bg-red-600 transition text-sm">
                                Leave
                            </div>
                        </div>

                        <div class="hidden sm:block sm:ml-auto">
                            <div @onclick="LeaveCommunity"
                            class="cursor-pointer w-auto flex justify-center bg-red-500 text-white font-semibold py-2 px-4 rounded-full hover:bg-red-600 transition text-sm">
                                Leave
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="mt-4 sm:hidden">
                            <div @onclick="JoinCommunity"
                            class="cursor-pointer w-full flex justify-center bg-blue-500 text-white font-semibold py-2 px-4 rounded-full hover:bg-blue-600 transition text-sm">
                                Join
                            </div>
                        </div>

                        <div class="hidden sm:block sm:ml-auto">
                            <div @onclick="JoinCommunity"
                            class="cursor-pointer w-auto flex justify-center bg-blue-500 text-white font-semibold py-2 px-4 rounded-full hover:bg-blue-600 transition text-sm">
                                Join
                            </div>
                        </div>
                    }

                </div>

                <div class="mt-6 border-t border-gray-200 pt-6">
                    <h3 class="text-sm font-bold text-gray-700">Description</h3>
                    <p class="text-gray-600 mt-2">@CommunityView.Description</p>
                </div>
            </div>
        </div>

        <div class="space-y-4">
            <div class="bg-white rounded-lg shadow-sm p-6 text-center">
                <p class="text-gray-500">This user hasn't made any posts yet.</p>
            </div>
        </div>


    </main>

    <aside class="hidden xl:block py-6">
        <div class="bg-white rounded-lg shadow-sm">
            <div class="h-20 bg-[#@CommunityView.BackgroundColor] rounded-t-lg"></div>
            <div class="p-4">
                <h3 class="text-lg font-bold text-gray-900 mb-4">
                    About Community
                </h3>

                <div class="flex items-center text-gray-800">
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" />
                        <circle cx="9" cy="7" r="4" />
                        <path d="M22 21v-2a4 4 0 0 0-3-3.87" />
                        <path d="M16 3.13a4 4 0 0 1 0 7.75" />
                    </svg>
                    <span class="text-sm text-gray-600 ml-1">@CommunityView.MemberCount Members</span>
                </div>

                <hr class="my-4" />

                <a href="/submit"
                class="block w-full bg-blue-600 text-white text-center font-semibold py-2 rounded-full hover:bg-blue-700 transition">
                    Create Post
                </a>
            </div>
        </div>
    </aside>
</div>

@code {
    // Mora porazlicno zatoa sto vo community card e public parametar i imeto zeza ako dvete se community
    [Parameter]
    public string? CommunityName { get; set; }

    private string _errorMessage { get; set; } = null;
    public CommunityModel CommunityView { get; set; }

    protected override void OnInitialized()
    {
        var response = CommunityService.GetCommunity(CommunityName);

        if(response != null)
        {
            CommunityView = response;
        }
    }

    private bool CheckIfMember()
    {
        return CommunityService.JoinedCommunities.Contains(CommunityView.Id ?? -1);
    }

    private async Task JoinCommunity()
    {
        bool result = await CommunityService.JoinCommunityAsync(CommunityView.Id ?? -1);

        if (!result)
        {
            _errorMessage = "Something went wrong";
            ToastService.ShowError(_errorMessage);
        }

        CommunityView.MemberCount += 1;

        StateHasChanged();
    }

    private async Task LeaveCommunity()
    {
        bool result = await CommunityService.LeaveCommunityAsync(CommunityView.Id ?? -1);

        if (!result)
        {
            _errorMessage = "Something went wrong";
            ToastService.ShowError(_errorMessage);
        }

        CommunityView.MemberCount -= 1;

        StateHasChanged();
    }

    private async Task GoBack()
    {
        await JSRuntime.InvokeVoidAsync("history.back");
    }

}
