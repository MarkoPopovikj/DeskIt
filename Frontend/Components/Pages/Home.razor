@page "/"

@using Frontend.Components.Shared
@using Frontend.Models
@using Frontend.Services

@inject PostService PostService
@inject Blazored.Toast.Services.IToastService ToastService

<div class="max-w-7xl mx-auto px-2 pb-20">
    <div class="grid grid-cols-1 xl:grid-cols-[1fr_320px] gap-4">
        <div>
            <div class="mb-6 text-center py-5">
                <h1 class="text-3xl font-extrabold text-gray-900 mb-2 bg-gradient-to-r from-blue-800 to-blue-400 bg-clip-text text-transparent">
                    🔥 Home
                </h1>
                <p class="text-base text-gray-600">
                    Discover what's new in your communities
                </p>
            </div>

            <NothingMadeCard Query="Oops... Seems there is nothing here" />
        </div>

        <aside class="hidden xl:block py-6">
            <div class="sticky top-6">
                <div class="bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl p-6 text-white shadow-lg">
                    <h3 class="text-lg font-bold mb-2">Create Your Own Space</h3>
                    <p class="text-sm text-blue-100 mb-4">
                        Have an idea for a community? Build your own and connect with
                        like-minded people.
                    </p>
                    <a href="create_community"
                    class="block w-full px-4 py-2 bg-white text-blue-600 rounded-lg font-semibold text-sm hover:bg-gray-50 transition-colors text-center">
                        Create Community
                    </a>
                </div>
            </div>
        </aside>

    </div> 
</div>

@code{
    private bool _isLoading { get; set; }
    private string _errorMessage { get; set; } = null;
    private int _errorCounter = 0;

    protected override async Task OnInitializedAsync()
    {
        await ForceReload();
    }

    private async Task ForceReload()
    {
        _isLoading = true;
        _errorMessage = null;

        await CheckPostsExist();

        if(_errorCounter == 0)
        {
            _isLoading = false;
        }
        else
        {
            _errorMessage = "Something went wrong";
            ToastService.ShowError(_errorMessage);
        }

        StateHasChanged();
    }

    private async Task CheckPostsExist()
    {
        bool result = await PostService.GetPostsAsync();

        if (!result)
        {
            _errorCounter++;
        }
    }
}
